#!/usr/bin/env bash

ROOT_DIR="$(cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &>/dev/null && pwd)"
ENV_FILE="$ROOT_DIR/.env"

force=0
list_only=0

help() {
  cat << EOF
Start or switch to a workspace (using git worktrees)

Usage: work [OPTIONS] [workspace]

Options:

  -h, --help            show this help message then exit

  -l, --list            list all workspaces then exit

Positional Arguments:

workspace    the name to use for the folder as well as the branch name
             will be slugified, preserving only [a-zA-Z0-9/._-] characters
             defaults to the previously-specified workspace in the .env file
             otherwise lists the available branches and exits

EOF
}

parsed_args=$(getopt --name "work" -o hl -l help,list -- "$@")
eval set -- "$parsed_args"
while :; do
  case "$1" in
    -l|--list)
      list_only=1
      shift 1
      ;;
    -h|--help)
      help
      exit 0
      ;;
    --)
      shift 1
      break
      ;;
    *)
      echo "Error: got $1" >&2
      exit 1
      ;;
  esac
done

if [[ "$list_only" == 1 ]]; then
  find "$ROOT_DIR/spaces" -mindepth 1 -maxdepth 1 -type d | sort
  exit 0
fi

workspace="$1"
shift 1
if [[ -n "$workspace" ]]; then
  # clean up workspace name
  workspace="$(sed -r -e 's/[^a-zA-Z0-9\/._-]/-/g' -e 's/-+/-/g' <<< "$workspace")"
fi

if [[ -z "$workspace" && ! -f "$ENV_FILE" ]]; then
  echo "Error: no workspace provided and no previous workspace available" >&2
  echo "Create a workspace with one of the following branches" >&2
  git branch | sed '/ main$/ d' >&2
  exit 1
fi

workspace_path="$ROOT_DIR/spaces/$workspace"
if [[ -n "$workspace" ]]; then
  branch_name="$workspace"

  # fetch branches from all remotes
  # (but we only really need and check origin)
  git fetch --all

  if git rev-parse "remotes/origin/$branch_name" &>/dev/null || git rev-parse "$branch_name" &>/dev/null; then
    # branch already exists
    if [[ ! -d "$workspace_path" ]]; then
      # but worktree does not yet so create it
      # git will track the remote if it isn't already
      git worktree add "$workspace_path" "$branch_name" || exit 1
    fi
  else
    # branch does not exist, create it from the first commit
    root_commit="$(git rev-list --max-parents=0 HEAD)"
    git worktree add -b "$branch_name" "$workspace_path" "$root_commit" || exit 1
  fi

  if [[ -f "$ENV_FILE" ]]; then
    if [[ "$(head -n 1 "$ENV_FILE")" != "# autogenerated" ]]; then
      echo "Error: $ENV_FILE exists but was not autogenerated!" >&2
      echo "Remove it then try again" >&2
      exit 1
    fi
  else
    cat << EOF > "$ENV_FILE"
# autogenerated
export PATH="$ROOT_DIR:\$PATH"
EOF
  fi

  grep -Pcq "^export WORKSPACE=.+$" "$ENV_FILE" || sed -i '1 a export WORKSPACE=' "$ENV_FILE"
  sed -r -i "s,WORKSPACE=.*,WORKSPACE='$workspace'," "$ENV_FILE"
fi

echo "Activating workspace"
source "$ENV_FILE"
cd "$ROOT_DIR/spaces/$WORKSPACE"
exec bash
